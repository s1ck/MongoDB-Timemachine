0 Index auf "timestamp"?

	db.measurings.ensureIndex({"timestamp" : 1});

1 Wieviele Einträge hat Zeitreihe XY insgesamt/im Zeitintervall [von,bis]?

	db.measurings.find(
	{ 
		"datatype" : <type>, 
		"stationID" : <stationID>, 
		"serialNo" : 1, 
		"timestamp" : 
		{ 
			$gt : <from>, 
			$lt : <to> 
		}
	}).count();

	db.measurings.find({ "datatype" : "gain", "stationID" : "wendlinghausen2", "serialNo" : 1, "timestamp" : { $gt : 1269953100000, $lt : 1269970200000 }}).count();
	
	--> 14

2 Wie ist der Wert der Zeitreihe XY zum Zeitpunkt Z?

	db.measurings.find(
	{ 
		"datatype" : <type>, 
		"stationID" : <stationID>, 
		"serialNo" : 1, 
		"timestamp" : <Z>
	},	
	{ 
		<projektion> : 1 
	});
	
	db.measurings.find({ "datatype" : "gain", "stationID" : "wendlinghausen2", "serialNo" : 1, "timestamp" : 1269953100000 }, { "value" : 1 } );
	
	--> { "_id" : ObjectId("4edcc195a720479fb491fa9b"), "value" : 43550 }

3 Wie sind die Werte der Zeitreihe XY im Zeitintervall [von,bis]? 

	db.measurings.find(
	{ 
		"datatype" : <type>, 
		"stationID" : <stationID>, 
		"serialNo" : 1,
		"timestamp" : 
		{ 
			$gt : <from>, 
			$lt : <to> 
		}
	}, 
	{ 
		<projektion> : 1 
	});
	
	db.measurings.find({ "datatype" : "gain", "stationID" : "wendlinghausen2", "serialNo" : 1, "timestamp" : { $gt : 1269953100000, $lt : 1269970200000 }}, { "value" : 1 } );

4 Wie ist der Zeitpunkt des ältesten/neuesten Eintrags in Zeitreihe XY?

	db.measurings.find(
	{ 
		"datatype" : <type>, 
		"stationID" : <stationID>, 
		"serialNo" : <serialNo>
	}, 
	{
		<projektion> : 1
	}).sort(
	{
		<sort_attr> : [1|-1] // should be indexed
	}).limit(1);
	
	db.measurings.find({ "datatype" : "gain", "stationID" : "wendlinghausen2", "serialNo" : 1}, {"timestamp" : 1}).sort({"timestamp" : -1}).limit(1); // max
	
5 Wie ist der maximale/minimale/durchschnittliche Wert der Zeitreihe XY im Zeitintervall [von,bis]?

	db.measurings.find({ "datatype" : "gain", "stationID" : "wendlinghausen2", "serialNo" : 1 }, { "value" : 1 }).sort({"value" : 1}).limit(1) // min value (0)
	db.measurings.find({ "datatype" : "gain", "stationID" : "wendlinghausen2", "serialNo" : 1 }, { "value" : 1 }).sort({"value" : -1}).limit(1) // max value (125380)

M/R Beispiel
- wichtig hierbei, MAP ausgabeformat (value) == REDUCE ausgabeformat (value) f�r die korrekte Aggregation

db.runCommand(
{ 	
	mapreduce 	: "measurings",
	map 		: function() {					
					emit(this.stationID, {total:this.value, count:1, avg:0, min:this.value, max:this.value}); 
				},
	reduce 		: function(key, values) {
					var r = {total:0, count:0, avg:0, min:0, max:0};
					if(values.length > 0) {
						r.min = values[0].min;
						r.max = values[0].max;
					}
					values.forEach(function(v) {
						r.total += v.total;
						r.count += v.count;
						
						if(v.min < r.min) {
							r.min = v.min;
						}
						if(v.max > r.max) {
							r.max = v.max;
						}
					});
					
					return r;					
				},
	out 		: { inline : 1 }, 
	query 		: { "datatype" : "gain", "stationID" : "wendlinghausen2", "serialNo" : 1, "timestamp" : { $gt : 1269953100000, $lt : 1269970200000 } },
	finalize	: function(k, r) {
					if(r.count > 0)
						r.avg = r.total / r.count;
					return r;
				}
});

6 Wie ist der Verlauf des Wirkungsgrades für den Wechselrichter XY im Zeitintervall [von,bis]? (Wirkungsgrad:=PAC/(Summe PDC aller Strings))

db.runCommand(
{ 	
	mapreduce 	: "measurings",
	map 		: function() {	
					var r = {pac:0, total_pdc:0};
									
					if(this.datatype == "pac") {
						r.pac = this.value;
					} else {
						r.total_pdc = this.value;
					}
					emit(this.timestamp, r);
				},
	reduce 		: function(key, values) {
					var r = {pac : 0, total_pdc:0};
					
					values.forEach(function(v) {
						r.pac += v.pac;
						r.total_pdc += v.total_pdc;												
					});
					
					return r;					
				},
	out 		: { inline : 1 }, 
	query 		: { $or : [ { "datatype" : "pac" }, { "datatype" : "pdc" } ], "stationID" : "wendlinghausen2", "serialNo" : 1, "timestamp" : { $gte : 1269968400000, $lte : 1269969300000 } },
	finalize	: function(k, r) {
					if(r.pac > 0)
						return {timestamp : k, wirkungsgrad : r.pac / r.total_pdc };
				}
});

7 An welchen Tagen hat Zeitreihe XY den Schwellenwert Z über-/unterschritten? (Beispiel: Wann war der Tagesertrag unter 100?)

db.runCommand(
{ 	
	mapreduce 	: "measurings",
	map 		: function() {
					var r = {count:1, total:this.value, avg:0, timestamp:this.timestamp}
					// group documents by day
					var day = Math.floor(this.timestamp / 1000 / 60 / 60 / 24);									
					emit(day, r);
				},
	reduce 		: function(key, values) {
					var r = {count:0, total:0, avg:0, timestamp:0}
					
					values.forEach(function(v) {
						r.total += v.total;
						r.count += v.count;
						r.timestamp = v.timestamp; 
					});
					return r;					
				},
	out 		: { replace : "temp" }, 
	query 		: { "datatype" : "gain" , "stationID" : "wendlinghausen2", "serialNo" : 1 },
	finalize	: function(k, r) {					
					var date = new Date(r.timestamp);
					var dateString = date.getDate() + "." + (date.getMonth() + 1) + "." + date.getFullYear();
					if(r.count > 0) {
						r.avg = r.total / r.count;
					}
					return {date : dateString, res : r};					
				}	
});

// Abfrage der aggregierten Daten in Ergebnis Collection "temp"

db.temp.find({"value.total" : { $lt : 100 } }, { "value.date" : 1 });

8 Wie groß ist die erzeugte Leistung von Wechselrichter X durchschnittlich pro Temperaturstufe? (d.h. Durchschnitt von PAC je Wert der Temperaturzeitreihe)

// Phase 1: Gruppieren von PAC und TEMP nach Zeitstempel

db.runCommand(
{ 	
	mapreduce 	: "measurings",
	map 		: function() {
					var r = { temp : 0, pac : 0 };
					if(this.datatype == 'temp')
						r.temp = this.value;
					else
						r.pac = this.value;
						
					emit(this.timestamp, r);
				},
	reduce 		: function(key, values) {
					var r = { temp : 0, pac : 0 };
					values.forEach(function(v) {
						if(v.temp > 0)
							r.temp = v.temp;
						else
							r.pac = v.pac;
					});
					return r;					
				},
	out 		: { replace : "ts_grouped" }, 
	query 		: { $or : [ { "datatype" : "pac" }, { "datatype" : "temp" } ], "stationID" : "wendlinghausen2", "serialNo" : 1},	
});

// Phase 2: Gruppieren nach Temperatur und berechnen des AVG(PAC)

db.runCommand(
{ 	
	mapreduce 	: "ts_grouped",
	map 		: function() {
					var r = { count : 1, total_pac : this.value.pac };
					emit(this.value.temp, r);					
				},
	reduce 		: function(key, values) {
					var r = { count : 0, total_pac : 0 };
					values.forEach(function(v) {
						r.count += v.count;
						r.total_pac += v.total_pac;
					});
					return r;
				},
	out 		: { inline : 1 },
	finalize	: function(key, value) {
					if(value.count > 0)
						return{temp : key, avg_pac : value.total_pac / value.count };
				}
});

9 Für welche Tage im Zeitintervall [von, bis] liegen KEINE Werte für Zeitreihe XY vor?




